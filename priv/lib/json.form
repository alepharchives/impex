% JSON Definition
{form,
	json, % datatype
	object,
	[ % global
%		{root, object}, 
		{whitespace, ignore}, 
		{'case', ignore}
	],
	[ % patterns
		{def, object, [{"{", "}"}, {"{", members, "}"}], list},
		{def, members, [pair, {pair, ",", members}], value}, % recursive def
		{def, pair, [{key, ":", value}], tuple},
		{def, key, [{regex,string}], atom},
		{def, array, [{"[", "]"}, {"[", {list, ",", value}, "]"}], list},
%		{def, elements, [{list, ",", value}], value}, % recursive def as fun
		{def, value, [string, number, object, array, {"true"}, {"false"}, {"null"}], eval},
		{def, string, [{regex,string}], value},
		{def, number, [{regex, number}], value}
		
%		{def, number, [int, {int, frac}, {int, exp}, {int, frac, exp}], any},
%		{def, int, [digit, {digit1_9, digits}, {"-", digit}, {"-", digit1_9, digits}], []},
%		{def, frac, [{".", digits}], any},
%		{def, exp, [{e, digits}], any},
%		{def, digits, [{digit, digits}], any},
%		{def, digit1_9, [{regex, "[1-9]"}], any},
%		{def, digit, [{regex, "[0-9]"}], any},
%		{def, e, [{regex, "[Ee][+-]?"}], any}
	]
}.
